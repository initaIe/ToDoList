// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ToDoList.Infrastructure.DbContexts;

#nullable disable

namespace ToDoList.Infrastructure.Migrations
{
    [DbContext(typeof(ToDoListWriteDbContext))]
    partial class ToDoListWriteDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.11");

            modelBuilder.Entity("ToDoList.Domain.ToDoItemManagement.AggregateRoot.ToDoItem", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("created_at");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("INTEGER")
                        .HasColumnName("is_completed");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("title");

                    b.HasKey("Id")
                        .HasName("pk_to_do_items");

                    b.HasIndex("Title")
                        .IsUnique()
                        .HasDatabaseName("idx_unique_title");

                    b.ToTable("to_do_items", (string)null);
                });

            modelBuilder.Entity("ToDoList.Domain.UsersManagement.AggregateRoot.User", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("created_at");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT")
                        .HasColumnName("email_address");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("password_hash");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(15)
                        .HasColumnType("TEXT")
                        .HasColumnName("phone_number");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("TEXT")
                        .HasColumnName("username");

                    b.HasKey("Id")
                        .HasName("pk_users");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("ToDoList.Domain.UsersManagement.Entities.RefreshSession", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("created_at");

                    b.Property<DateTimeOffset>("ExpiresAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("expires_at");

                    b.Property<Guid>("Jti")
                        .HasColumnType("TEXT")
                        .HasColumnName("jti");

                    b.Property<Guid>("user_id")
                        .HasColumnType("TEXT")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_refresh_sessions");

                    b.HasIndex("user_id")
                        .HasDatabaseName("ix_refresh_sessions_user_id");

                    b.ToTable("refresh_sessions", (string)null);
                });

            modelBuilder.Entity("ToDoList.Domain.UsersManagement.Entities.RefreshSession", b =>
                {
                    b.HasOne("ToDoList.Domain.UsersManagement.AggregateRoot.User", null)
                        .WithMany("RefreshSessions")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_refresh_sessions_users_user_id");
                });

            modelBuilder.Entity("ToDoList.Domain.UsersManagement.AggregateRoot.User", b =>
                {
                    b.Navigation("RefreshSessions");
                });
#pragma warning restore 612, 618
        }
    }
}
